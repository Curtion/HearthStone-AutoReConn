import { Button, Palette } from "std-widgets.slint";

export component MainWindow inherits Window {
    default-font-family: "Microsoft YaHei";
    default-font-weight: 700;
    in property <string> hotkeys;
    property <string> current-pressed-keys;

    callback save-hotkeys(string);

    // Private properties to track modifier key state
    private property <bool> is-ctrl-down: false;
    private property <bool> is-alt-down: false;
    private property <bool> is-shift-down: false;
    private property <bool> is-meta-down: false;

    title: "快捷键设置";
    width: 350px;
    height: 200px;
    icon: @image-url("../src/assets/hsarec.png");

    forward-focus: key-handler;
    key-handler := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.Escape) {
                root.current-pressed-keys = "";
                root.is-ctrl-down = false;
                root.is-alt-down = false;
                root.is-shift-down = false;
                root.is-meta-down = false;
                return accept;
            }

            if (event.text == Key.Control) { root.is-ctrl-down = true; }
            if (event.text == Key.Alt) { root.is-alt-down = true; }
            if (event.text == Key.Shift) { root.is-shift-down = true; }
            if (event.text == Key.Meta) { root.is-meta-down = true; }

            if (event.text == Key.Control || event.text == Key.Alt || event.text == Key.Shift || event.text == Key.Meta) {
                return accept;
            }

            root.current-pressed-keys = ((root.is-ctrl-down || event.modifiers.control) ? "Ctrl+" : "")
                                      + ((root.is-alt-down || event.modifiers.alt) ? "Alt+" : "")
                                      + ((root.is-shift-down || event.modifiers.shift) ? "Shift+" : "")
                                      + ((root.is-meta-down || event.modifiers.meta) ? "Meta+" : "")
                                      + event.text.to-uppercase();
            accept
        }
        key-released(event) => {
            if (event.text == Key.Control) { root.is-ctrl-down = false; }
            if (event.text == Key.Alt) { root.is-alt-down = false; }
            if (event.text == Key.Shift) { root.is-shift-down = false; }
            if (event.text == Key.Meta) { root.is-meta-down = false; }
            accept
        }
    }

    VerticalLayout {
        padding: 15px;
        spacing: 15px;

        Text {
            text: "快捷键设置";
            horizontal-alignment: center;
            font-size: 20px;
            font-weight: 900;
        }

        GridLayout {
            spacing: 10px;
            Row {
                Text { text: "当前快捷键:"; vertical-alignment: center; }
                Text { text: root.hotkeys; vertical-alignment: center; }
            }
            Row {
                Text { text: "当前按下的键:"; vertical-alignment: center; }
                Text { text: root.current-pressed-keys == "" ? "无" : root.current-pressed-keys; vertical-alignment: center; }
            }
        }

        Text {
            text: "注意：不支持 Ctrl+Alt 组合键。";
            font-size: 12px;
            color: gray;
            horizontal-alignment: center;
        }

        Button {
            text: "保存快捷键";
            enabled: root.current-pressed-keys != "" && !(root.is-ctrl-down && root.is-alt-down);
            clicked => {
                root.save-hotkeys(root.current-pressed-keys);
            }
        }
    }
}